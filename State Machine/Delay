-- 18.08.2017 17:20:33 AR V1.0a
-- 20.08.2017 09:59:22 AR V1.0b

generic = {
  parameter = {
    delayS = 1
  },

  init = function(self)
    block.setInputsPinCount(1)
    block.setOutputsPinCount(1)
    block.setInputPinTypeRestrains(1, 'table')
    block.setOutputPinTypeRestrains(1, 'table')
    block.modifyFlags('SupressStopFunctionCall', true)
    block.modifyFlags('BreakAlgebraLoop', true)
  end,

  open = function(self)
    gui.add('Info', 'Info', 'Delay', 'Delayed state transition')
    gui.add('Edit', 'EditDelay', 'Delay [s]')
    gui.set('EditDelay', 'Number', self.parameter.delayS)
    gui.setSize()
  end,

  apply = function(self)
    self.parameter.delayS = gui.get('EditDelay', 'Number')
  end,

  close = function()
  end,

  avatar = function(self)
    return block.getDefaultAvatar(0x50, "'" .. self.parameter.delayS .. "s'", 'draw.line(0, 2, 10, 6, 0, 10)')
  end,

  generate = function(self)
    local source =
      [==[
        local block = {}

        block.start = function()
          block.q = {active = false}
          block.timeS = 0.0
        end

        block.stepFirst = function()
          return block.q
        end
        block.stepLast = function(a)
          if a.token then
            block.timeS = block.timeS + block.parent.ellapsedS
            if block.timeS >= DELAY then
              block.q = a
            end
          else
            block.timeS = 0.0
            block.q = {active = false}
          end
        end

        return block
      ]==]
    local replaces = {
      ['DELAY'] = self.parameter.delayS,
    }
    return string.gsub(source, '%a+', replaces)
  end,

}

