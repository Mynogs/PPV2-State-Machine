-- 23.08.2017 07:19:32 AR V1.0a

block.setSize(6, 51)

generic = {
  parameter = {
    inputs = 2
  },

  refreshPins = function(self)
    block.setInputsPinCount(self.parameter.inputs)
    for i = 1, self.parameter.inputs do
      block.setInputPinTypeRestrains(i, 'table')
      block.setInputPinAppearance(i, 0)
    end
  end,

  init = function(self)
    block.setOutputsPinCount(1)
    block.setOutputPinTypeRestrains(1, 'table')
    block.setOutputPinAppearance(1, 0)
    generic:refreshPins()
    block.modifyFlags('SupressStartFunctionCall', true)
    block.modifyFlags('SupressStopFunctionCall', true)
  end,

  open = function(self)
    gui.add('Info', 'Info', 'Join', 'Emits a token if all inputs receive a token')
    gui.add('Edit', 'EditNumberOfInputs', 'Number of Inputs')
    gui.set('EditNumberOfInputs', 'Integer', self.parameter.inputs)
    gui.setSize()
  end,

  apply = function(self)
    self.parameter.inputs = math.max(gui.get('EditNumberOfInputs', 'Integer'), 1)
    generic:refreshPins()
  end,

  close = function()
  end,

  avatar = function(self)
    return block.getDefaultAvatar(0x54, '', 'draw.line(6, 2, 16, 6, 6, 10)')
  end,

  generate = function(self)
    local source =
      [==[
        local block = {}

        block.step = function(...)
          local arg = {...}
          for _, v in pairs(arg) do
            if not v.token then
              block.token = false
              return block
            end
          end
          for _, v in pairs(arg) do
            v.token = false
          end
          block.token = true
          return block
        end

        return block
      ]==]
    return source
  end,

}

