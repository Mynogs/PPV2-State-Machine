block.setSize(51, 21)

generic = {
  parameter = {
    name = 'State',
    inputs = 1,
  },

  init = function(self)
    block.setOutputsPinCount(1)
    block.setOutputPinTypeRestrains(1, 'boolean')
    block.modifyFlags('SupressStartFunctionCall', true)
    block.modifyFlags('SupressStopFunctionCall', true)
  end,

  open = function(self)
    gui.add('Info', 'Info', 'Is state active', [[
Is the state block with the given name
active the result is trur
]])
    gui.add('Edit', 'EditName', 'State name')
    gui.set('EditName', 'Text', self.parameter.name)
    gui.setSize()
  end,

  apply = function(self)
    self.parameter.name = gui.get('EditName', 'Text')
  end,

  close = function()
  end,

  avatar = function(self)
    return block.getDefaultAvatar(0x152, "'" .. self.parameter.name .. "'",
      [[
        if token.get('.' .. self.uuid .. '.token') == 'true' then
          draw.setColorA(1.0, 0.6, 0.8)
          draw.roundRect(5, 5, w - 10, h - 10, (h - 10) / 3, 5)
          draw.setColorA(0.0, 0.0, 0.0)
        end
      ]]
    )
  end,

  generate = function(self)
    local source =
      [==[
        local block = {}

        block.step = function()
          return block.parent.states and not not block.parent.states['NAME']
        end

        return block
      ]==]
    local replaces = {
      ['UUID'] = block.getUUID(),
      ['NAME'] = self.parameter.name,
    }
    return string.gsub(source, '%a+', replaces)
  end,

}

